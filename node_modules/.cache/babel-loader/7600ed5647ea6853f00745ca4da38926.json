{"ast":null,"code":"import _classCallCheck from \"/Users/loryleticee/first-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/loryleticee/first-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/loryleticee/first-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/loryleticee/first-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/loryleticee/first-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/loryleticee/first-project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/loryleticee/first-project/src/form.js\";\nimport React, { Component } from 'react';\nimport marked from 'marked';\n\nvar assert = require('assert'); // Generate an AssertionError to compare the error message later:\n\n\nvar _ref = new assert.AssertionError({\n  actual: 1,\n  expected: 2,\n  operator: 'strictEqual'\n}),\n    message = _ref.message; // Verify error output:\n\n\ntry {\n  assert.strictEqual(\"\", \"\");\n} catch (err) {\n  assert(err instanceof assert.AssertionError);\n  assert.strictEqual(err.message, message);\n  assert.strictEqual(err.name, 'AssertionError [ERR_ASSERTION]');\n  assert.strictEqual(err.actual, 1);\n  assert.strictEqual(err.expected, 2);\n  assert.strictEqual(err.code, 'ERR_ASSERTION');\n  assert.strictEqual(err.operator, 'strictEqual');\n  assert.strictEqual(err.generatedMessage, true);\n}\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.state = {\n      author: '',\n      text: ''\n    };\n    _this.handleAuthorChange = _this.handleAuthorChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"handleAuthorChange\",\n    value: function handleAuthorChange(e) {\n      this.setState({\n        author: e.target.value\n      });\n    }\n  }, {\n    key: \"handleTextChange\",\n    value: function handleTextChange(e) {\n      this.setState({\n        text: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      console.log(\"\".concat(this.state.author, \" said \\u201C\").concat(this.state.text, \"\\u201D\")); //we will be tying this into the POST method in a bit\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"jumbotron\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Votre nom\",\n        value: this.state.author,\n        onChange: this.handleAuthorChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Dites moi un mot\",\n        value: this.state.text,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-primary btn-lg btn-block\",\n        type: \"submit\",\n        value: \"Post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/loryleticee/first-project/src/form.js"],"names":["React","Component","marked","assert","require","AssertionError","actual","expected","operator","message","strictEqual","err","name","code","generatedMessage","Form","props","state","author","text","handleAuthorChange","bind","handleTextChange","handleSubmit","e","setState","target","value","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React ,{ Component } from 'react';\nimport marked from 'marked';\n\nconst assert = require('assert');\n\n// Generate an AssertionError to compare the error message later:\nconst { message } = new assert.AssertionError({\n  actual: 1,\n  expected: 2,\n  operator: 'strictEqual'\n});\n\n// Verify error output:\ntry {\n  assert.strictEqual(\"\",\"\");\n} catch (err) {\n  assert(err instanceof assert.AssertionError);\n  assert.strictEqual(err.message, message);\n  assert.strictEqual(err.name, 'AssertionError [ERR_ASSERTION]');\n  assert.strictEqual(err.actual, 1);\n  assert.strictEqual(err.expected, 2);\n  assert.strictEqual(err.code, 'ERR_ASSERTION');\n  assert.strictEqual(err.operator, 'strictEqual');\n  assert.strictEqual(err.generatedMessage, true);\n}\n\n\n\n\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { author: '', text: '' };\n        this.handleAuthorChange = this.handleAuthorChange.bind(this);\n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleAuthorChange(e) {\n        this.setState({ author: e.target.value });\n    }\n    handleTextChange(e) {\n        this.setState({ text: e.target.value });\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(`${this.state.author} said “${this.state.text}”`)\n        //we will be tying this into the POST method in a bit\n    }\n    render() {\n        return (\n            <form className = \"jumbotron\" onSubmit={ this.handleSubmit }>\n            <input\n                className = \"form-control\"\n                type='text'\n                placeholder='Votre nom'\n                value={ this.state.author }\n                onChange={ this.handleAuthorChange } />\n            <br/>\n            <input\n                className = \"form-control\"\n                type = 'text'\n                placeholder = 'Dites moi un mot'\n                value={ this.state.text }\n                onChange={ this.handleTextChange } />\n                <br/>\n            <input\n                className = \"btn btn-primary btn-lg btn-block\"\n                type = 'submit'\n                value = 'Post' />\n            </form>\n        )\n    }\n}\n\n   export default Form ;"]},"metadata":{},"sourceType":"module"}